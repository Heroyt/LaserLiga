{layout '../../@layout.latte'}

{varType App\GameModels\Game\Game $game}

{define teamColor}
	{default int $teamColor = 0}
	<span class="team-color bg-team-{$teamColor}"></span>
{/define}

{define containerClasses}
	game-results {if $game->mode->isSolo()}solo{/if}
{/define}

{define content}
	{include resultsHeader}
	{if $game->mode->isTeam() && $game->mode->settings->partTeams}
		{include resultsTeams}
	{/if}
	{if $game->mode->settings->partPlayers}
		{include resultsPlayers}
	{/if}
	{if $game->mode->settings->partHits && count($game->getPlayers()) < 7}
		{include resultsHits}
	{/if}
{/define}

{define resultsWin}
	{var App\GameModels\Game\Player|App\GameModels\Game\Team|null $win = $game->mode->getWin($game)}
	<div class="results-win">
		{if is_null($win)}
			<div class="print-primary">
				{lang 'Remíza', context: 'results'}
			</div>
		{elseif $win instanceof App\GameModels\Game\Team}
			<div class="bg-team-{$win->color}">
				{lang 'Vítězství', context: 'results'}: {$win->name}
			</div>
		{elseif $win instanceof App\GameModels\Game\Player}
			<div class="{if $game->mode->isSolo()}print-primary{else}bg-team-{$win->getTeam()->color}{/if}">
				{lang 'Vítězství', context: 'results'}: {$win->name}
			</div>
		{/if}
	</div>
{/define}

{define resultsHeader}
	<div class="results-header text-white text-start">
		<div class="my-1">
			<strong>{lang 'Kód hry', context: 'results.info'}:</strong>
			{$game->code}
		</div>
		<div class="my-1">
			<strong>{lang 'Datum', context: 'results.info'}:</strong>
			{$game->start->format('d.m.Y H:i:s')}
		</div>
		<div>
			<strong>{lang 'Herní mód', context: 'results.info'}:</strong>
			{lang $game->mode->name, context: 'gameModes'}
		</div>
	</div>
{/define}

{define resultsPlayers}
	{var int $maxScore = $game->getMaxScore()}
	{var int $minScore = $game->getMinScore()}
	{var int $maxShots = $game->getPlayers()->query()->sortBy('shots')->desc()->first()->shots}
	{var int $totalHeight = $maxScore - ($minScore < 0 ? $minScore : 0)}
	{var int $count = count($game->getPlayers())}
	<section class="results-players" style="grid-template-columns: repeat({$count}, 1fr)">
		{foreach $game->getPlayersSorted() as $player}
			<div class="results-player rounded p-2 bg-white flex-fill">
				<div class="player-head">
					{var array $rank = $player->getBestAt()}
					{svgIcon $rank['icon'], '', 15}
					<div class="player-name text-center text-team-{$player->getTeamColor()}">
						{$player->name}
					</div>
					<div class="player-rank">
						<div class="rank-name fs-sm">{$rank['name']}</div>
					</div>
				</div>
				{include playerScore}
				{include playerAccuracy}
				{include playerShots}
				{include playerHits}
				{include playerFavourites}
				{if method_exists($game, 'isMinesOn') && $game->isMinesOn() && $game->mode->settings->playerMines}
					{include playerMines}
				{/if}
			</div>
		{/foreach}
	</section>
{/define}

{define playerMines}
	{varType App\GameModels\Game\Evo5\Player $player}
	<div class="player_mines mt-2">
		{svgIcon 'base_2', '2rem'}
		<div class="bonus">
			<div n:foreach="$player->bonus->getArray() as $name => $value" class="{$name}">
				{svgIcon $name}
				{$value}
			</div>
		</div>
	</div>
{/define}

{define playerShots}
	<div n:if="$game->mode->settings->playerShots" class="player-shots">
		{var int $step = ceil($maxShots / 10)}
		{var int $count = ceil($player->shots / $step)}
		<svg viewBox="0 0 1720 504" class="mb-1">
			<g n:for="$i = 0; $i < $count; $i++" transform="translate({172*$i})">
				<g transform="matrix(1,0,0,1,-167,0)">
					<path d="M335.738,436.459L335.738,184.656C335.738,180.014 331.986,176.263 327.345,176.263L176.263,176.263C171.621,176.263 167.87,180.015 167.87,184.656L167.87,436.459C167.87,441.101 171.622,444.852 176.263,444.852L176.263,453.245C171.621,453.245 167.87,456.997 167.87,461.638L167.87,495.212C167.87,499.854 171.622,503.605 176.263,503.605L327.345,503.605C331.987,503.605 335.738,499.853 335.738,495.212L335.738,461.64C335.738,456.998 331.986,453.247 327.345,453.247L327.345,444.854C331.986,444.853 335.738,441.101 335.738,436.459Z"
						  style="fill-rule:nonzero;"/>
					<path d="M184.656,159.478L318.951,159.478C323.593,159.478 327.344,155.726 327.344,151.085L327.344,142.692C327.344,87.514 300.98,34.803 256.839,1.682C253.851,-0.559 249.755,-0.559 246.767,1.682C202.626,34.803 176.262,87.513 176.262,142.692L176.262,151.085C176.263,155.726 180.014,159.478 184.656,159.478Z"
						  style="fill-rule:nonzero;"/>
				</g>
			</g>
		</svg>
		<div class="number">{svgIcon 'bullets', '', '1em'} {$player->shots|number:0,',','&nbsp;'|noescape}</div>
	</div>
{/define}

{define playerAccuracy}
	<svg n:if="$game->mode->settings->playerAccuracy" viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"
													  class="accuracy" xml:space="preserve"
													  style="--color:var(--team-{$player->getTeamColor()});fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
					{var int $circleRadius = 98}
		<circle class="fill-circle" r="{$circleRadius}" cx="250" cy="250" fill="transparent" stroke="tomato"
				stroke-width="{2*$circleRadius}"
				stroke-dasharray="{round($player->accuracy * pi() * 2 * $circleRadius / 100, 4)} {round(pi() * 2 * $circleRadius,4)}"/>
		<text x="250px" y="282px" font-weight="bold">
			<tspan text-anchor="middle">{$player->accuracy}%</tspan>
		</text>
		<g class="sight">
			<g transform="matrix(1,0,0,1,-55,-4)">
				<path d="M305,56C414.279,56 503,144.721 503,254C503,363.279 414.279,452 305,452C195.721,452 107,363.279 107,254C107,144.721 195.721,56 305,56ZM305,65.98C408.771,65.98 493.02,150.229 493.02,254C493.02,357.771 408.771,442.02 305,442.02C201.229,442.02 116.98,357.771 116.98,254C116.98,150.229 201.229,65.98 305,65.98Z"/>
			</g>
			<g transform="matrix(1,0,0,1,-0.5,4.5)">
				<rect x="24" y="241" width="67" height="9"/>
			</g>
			<g transform="matrix(6.12323e-17,-1,1,6.12323e-17,4.5,500.5)">
				<rect x="24" y="241" width="67" height="9"/>
			</g>
			<g transform="matrix(1,0,0,1,385.5,4.5)">
				<rect x="24" y="241" width="67" height="9"/>
			</g>
			<g transform="matrix(6.12323e-17,-1,1,6.12323e-17,4.5,114.5)">
				<rect x="24" y="241" width="67" height="9"/>
			</g>
		</g>
				</svg>
{/define}

{define playerHits}
	<h4 class="mt-2 mb-0">{lang 'Zásahy', context: 'results.player'}:</h4>
	{var int $total = $player->hits + $player->deaths}
	<div n:if="$game->mode->settings->playerPlayers" class="hits mt-1 mb-2">
		<div class="kills" style="height:{100*$player->hits / ($total > 0 ? $total : 1)|noescape}%">
			<div class="main">
				<div class="icon">
					{svgIcon 'kill', '', '1rem'}
				</div>
				<div class="number">
					{$player->hits}
				</div>
			</div>
			<div n:if="$game->mode->settings->playerPlayersTeams && $game->mode->isTeam()" class="side">
				<div class="other"
					 style="height: {$player->hits === 0 ? 0 : (100 * $player->hitsOther / $player->hits)|noescape}%;">
					<div class="number">{$player->hitsOther}</div>
				</div>
				<div class="own bg-team-{$player->getTeamColor()}"
					 style="height: {$player->hits === 0 ? 0 : (100 * $player->hitsOwn / $player->hits)|noescape}%;">
					<div class="number">{$player->hitsOwn}</div>
				</div>
			</div>
		</div>
		<div class="deaths" style="height:{100*$player->deaths / ($total > 0 ? $total : 1)|noescape}%">
			<div class="main">
				<div class="icon">
					{svgIcon 'skull', '', '1rem'}
				</div>
				<div class="number">
					{$player->deaths}
				</div>
			</div>
			<div n:if="$game->mode->settings->playerPlayersTeams && $game->mode->isTeam()" class="side">
				<div class="other"
					 style="height: {$player->deaths === 0 ? 0 : (100 * $player->deathsOther / $player->deaths)|noescape}%;">
					<div class="number">{$player->deathsOther}</div>
				</div>
				<div class="own bg-team-{$player->getTeamColor()}"
					 style="height: {$player->deaths === 0 ? 0 : (100 * $player->deathsOwn / $player->deaths)|noescape}%;">
					<div class="number">{$player->deathsOwn}</div>
				</div>
			</div>
		</div>
	</div>
{/define}

{define playerScore}
	{var float $height = 100 * abs($player->score) / ($totalHeight > 0 ? $totalHeight : 1)}
	{var float $bottom = $player->score < 0 ? 0 : 100 * abs($minScore) / ($totalHeight > 0 ? $totalHeight : 1)}
	<div n:if="$game->mode->settings->playerScore" class="score-shadow mb-1 rounded">
		<div class="score">
			<div class="score-number" style="bottom: {$height+$bottom|noescape}%">
				<i class="fas fa-star"></i> {$player->score|number:0,',','&nbsp;'|noescape}
			</div>
			<div class="inner bg-team-{$player->getTeamColor()}"
				 style="height: {$height|noescape}%;bottom:{$bottom|noescape}%;"></div>
			<div class="line" style="bottom:{($player->score < 0 ? $height : $bottom)|noescape}%;"></div>
		</div>
	</div>
{/define}

{define playerFavourites}
	{var App\GameModels\Game\Player|null $favourite = $player->getFavouriteTarget()}
	{var App\GameModels\Game\Player|null $favouriteOf = $player->getFavouriteTargetOf()}
	<div n:if="$game->mode->settings->playerFavourites" class="player-favourites text-center">
		<div n:if="isset($favourite)" class="favourite-target">
			<strong>{lang 'Nejoblíbenější cíl', context: 'results.player'}:</strong>
			<div class="text-team-{$game->mode->isSolo() ? 2 : $favourite->getTeamColor()}">
				{$favourite->name}
			</div>
			<div class="number">
				{var int $hits = $player->getHitsPlayer($favourite)}
				{sprintf(lang('%d zabití', context: 'results'), $hits)}
			</div>
		</div>
		<div n:if="isset($favouriteOf)" class="favourite-target-of">
			<strong>{lang 'Největší zabiják', context: 'results.player'}:</strong>
			<div class="text-team-{$game->mode->isSolo() ? 2 : $favouriteOf->getTeamColor()}">
				{$favouriteOf->name}
			</div>
			<div class="number">
				{var int $deaths = $favouriteOf->getHitsPlayer($player)}
				{sprintf(lang('%d smrt', '%d smrtí', $deaths, context: 'results'), $deaths)}
			</div>
		</div>
	</div>
{/define}

{define resultsTeams}
	{var int $totalScore = array_sum(array_map(function($team){ return $team->score > 0 ? $team->score : 0;},$game->getTeams()->getAll()))}
	{var App\GameModels\Game\Team|null $win = $game->mode->getWin($game)}
	<div class="results-teams">
		<div n:foreach="$game->getTeamsSorted() as $team" class="team-score rounded bg-team-{$team->color}"
														  style="width:{100*($team->score > 0 ? $team->score : 0) / ($totalScore > 0 ? $totalScore : 1)|noescape}%;">
			{if is_null($win) || $win->id_team === $team->id_team}{svgIcon 'crown', '1rem'}{/if}
			<div class="name">{$team->name}</div>
			<div class="score"><i class="fas fa-star"></i> {$team->score|number:0,',','&nbsp;'|noescape}</div>
		</div>
	</div>
{/define}

{define resultsHits}
	{var float $width = 87.5 / count($game->getPlayers())}
	<section class="results-hits align-self-end">
		<h4 class="caption">
			{svgIcon 'kill', '', '1rem'}
			{lang 'Zásahy hráčů', context: 'results.hits'}
		</h4>
		<div n:foreach="$game->getPlayersSorted() as $player"
				class="player-hits w-100 bg-white rounded px-1 py-2 d-flex mt-1 align-items-center">
			<div class="player pe-1 border-end" style="width: 17.5%;">
				<div class="text-uppercase fw-bold text-team-{$player->getTeamColor()}">
					{$player->name}
				</div>
				<div class="fs-sm">
					{lang 'Zasáhl si hráče', context: 'results.hits'}:
				</div>
			</div>
			<div n:foreach="$game->getPlayersSorted()->getAll() as $player2" style="width: {$width|noescape}%;"
																			 class="text-center px-1 {if $player->id === $player2->id}text-muted{elseif $player->getFavouriteTarget()?->id === $player2->id}fw-bold text-print-primary{/if}">
				<div class="text-uppercase fw-bold {if $player->id !== $player2->id}text-team-{$player2->getTeamColor()}{/if}">
					{$player2->name}
				</div>
				<div class="">
					{$player->getHitsPlayer($player2)}
				</div>
			</div>
		</div>
	</section>
{/define}