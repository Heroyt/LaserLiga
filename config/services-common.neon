includes:
	- console.neon
	- local.neon
	- symfony.neon
parameters:
	auth:
		userClass: 'App\Models\Auth\User'
	routing:
		routeFiles:
			- %constants.appDir%routes
		controllers:
			- %constants.appDir%src/Controllers
	templating:
		tmpPath: '%constants.tempDir%latte'
extensions:
	caching: Nette\Bridges\CacheDI\CacheExtension(%constants.tempDir%)
	orisai.scheduler: OriNette\Scheduler\DI\SchedulerExtension
	decorator: Nette\DI\Extensions\DecoratorExtension
	inject: Nette\DI\Extensions\InjectExtension
orisai.scheduler:
	console:
		script: '%constants.appDir%bin/console'
	errorHandler: tracy
	jobs:
		logArchive:
			expression: 0 6 * * *
			callback: [@cron.logArchive, 'run']
		arenaReport:
			expression: 0 23 * * *
			callback: [@cron.arenaReport, 'run']
		regressionUpdate:
			expression: 0 3 * * *
			callback: [@cron.regressionUpdate, 'run']
		playerRankUpdate:
			expression: 11 * * * *
			callback: [@cron.playerRankUpdate, 'run']
		playerAchievementCheck:
			expression: 59 * * * *
			callback: [@cron.playerAchievementCheck, 'run']
		sitemap:
			expression: 30 23 * * *
			callback: [@cron.sitemap, 'run']
		gamemodes:
			expression: 45 23 * * *
			callback: [@cron.gamemodes, 'run']
		privacyUpdate:
			expression: 00 12 * * *
			callback: [@cron.privacy, 'run']
		confirmEmail:
			expression: 30 11 * * *
			callback: [@cron.confirmEmail, 'run']
services:
	# Core
	app: Lsr\Core\App
	translations:
		create: Lsr\Core\Translations
		arguments:
			config: @config
			defaultLang: 'cs_CZ'
			supportedLanguages:
				- 'cs_CZ'
				- 'en_US'
				- 'de_DE'
				- 'fr_FR'
				- 'sk_SK'
			textDomains:
				- 'results'
				- 'tips'
				- 'cli'
				- 'highlights'
				- 'tournament'
				- 'privacy'
				- 'music'

	- App\Services\Maths\RegressionCalculator
	- App\Services\PushService

	redis:
		create: \Redis
		setup:
			- connect(%redis.host%)

	turnstile: App\Services\Turnstile(secret: %turnstile.secret%, key: %turnstile.key%, enabled: %turnstile.enabled%)

	regression.evo5: App\GameModels\Tools\Lasermaxx\RegressionStatCalculator

	caching.journal: Lsr\Core\Caching\RedisJournal(@redis)
	cache.storage: Lsr\Core\Caching\RedisStorage(@redis, '', @caching.journal)
	cache: Lsr\Core\Caching\Cache(@cache.storage, null, %constants.debug%)

	avatars: App\Services\Avatar\AvatarService

	user: App\Models\Auth\User
	rankCalculator: App\Services\Player\RankCalculator

	userRegistration: App\Services\UserRegistrationService
	playerUser: App\Services\Player\PlayerUserService
	playerRankOrder: App\Services\Player\PlayerRankOrderService
	playerDistribution: App\Services\PlayerDistribution\PlayerDistributionService
	playerGamesTogether: App\Services\Player\PlayersGamesTogetherService
	playerStatsProvider: App\Services\Player\PlayerStatsProvider

	mailer: Nette\Mail\SendmailMailer
	mail: App\Services\MailService

	image: App\Services\ImageService

	evo5HighlightChecker:
		type: App\Services\GameHighlight\Checkers\Evo5HighlightChecker
		tags:
			- highlightChecker
	userHighlightChecker:
		type: App\Services\GameHighlight\Checkers\UserHighlightChecker
		tags:
			- highlightChecker
	hitsHighlightChecker:
		type: App\Services\GameHighlight\Checkers\HitsHighlightChecker
		tags:
			- highlightChecker
	deathsHighlightChecker:
		type: App\Services\GameHighlight\Checkers\DeathsHighlightChecker
		tags:
			- highlightChecker
	trophyHighlightChecker:
		type: App\Services\GameHighlight\Checkers\TrophyHighlightChecker
		tags:
			- highlightChecker

	gameHighlight: App\Services\GameHighlight\GameHighlightService(tagged(highlightChecker))
	achievementChecker: App\Services\Achievements\AchievementChecker
	achievementProvider: App\Services\Achievements\AchievementProvider
	playerAchievementChecker: App\Services\Achievements\PlayerAchievementChecker
	titleProvider: App\Services\Achievements\TitleProvider
	eventRegistration: App\Services\EventRegistrationService
	arenaStats: App\Services\ArenaStatsAggregator

	cron.logArchive: App\Cron\LogArchiveJob
	cron.arenaReport: App\Cron\ArenaReportJob
	cron.regressionUpdate: App\Cron\RegressionUpdateJob
	cron.playerRankUpdate: App\Cron\PlayerRankUpdateJob
	cron.playerAchievementCheck: App\Cron\PlayerAchievementCheckJob
	cron.sitemap: App\Cron\GenerateSitemapJob
	cron.gamemodes: App\Cron\CheckGameModesJob
	cron.privacy: App\Cron\PrivacyUpdateNotificationJob
	cron.confirmEmail: App\Cron\UserConfirmationEmailsJob

	result.parser: App\Tools\ResultParsing\ResultsParser
	result.parser.evo5: App\Tools\ResultParsing\Evo5\ResultsParser
	result.parser.evo6: App\Tools\ResultParsing\Evo6\ResultsParser

	thumbnails: App\Services\Thumbnails\ThumbnailGenerator
	fontawesome: App\Services\FontAwesomeManager

	templating.latte.lac:
		create: App\Latte\LacExtension
		tags:
			- templating
	templating.latte.engine:
		setup:
			- addExtension(@templating.latte.lac)
search:
	achievementCheckers:
		in: %constants.appDir%/src/Services/Achievements/Checkers
		implements:
			- App\Services\Achievements\CheckerInterface
		tags:
			- achievementChecker

decorator:
	Lsr\Core\Controllers\Controller:
		inject: true